Nama Peserta	: Priscilla Gabriela
Kode Peserta	: 002 (FSDO001ONL002)
Tugas		: Final Project (C#)


PANDUAN & LANGKAH TESTING CRUD OPERATION REST API MENGGUNAKAN SWAGGER

1.	Menguji API Register [POST]
	- Start koneksi MySQL melalui XAMPP dengan mengklik button start pada modul Apache dan MySQL
	- Membuka cmd atau windows powershell sesuai direktori project
	- Mengetik "dotnet watch run" pada cmd atau windows powershell
	- Halaman browser yang ditujukan untuk testing API dengan Swagger akan ditampilkan
	- Mengklik button try it out pada pilihan POST /api/AuthManagement/Register
	- Mengisi data register dan mengklik button execute
	- Swagger akan menampilkan status dan token

2. 	Menguji API Login [POST]
	- Mengklik button try it out pada pilihan POST /api/AuthManagement/Login
	- Mengisi data login dan mengklik button execute
	- Swagger akan menampilkan status dan token

3. 	Menguji API RefreshToken [POST]
	- Mengklik button try it out pada pilihan POST /api/AuthManagement/RefreshToken
	- Mengisi token dan refresh token berdasarkan yang didapat dari proses login
	- Swagger akan menampilkan status dan token

4. 	Menguji API GetPayments [GET]
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengklik button try it out pada pilihan GET /api/PaymentDetail
	- Mengklik button execute
	- Swagger akan menampilkan semua data payment detail

5. 	Menguji API GetPaymentById [GET]
	- Mengklik button try it out pada pilihan GET /api/PaymentDetail{id}
	- Mengisi id dan mengklik button execute
	- Swagger akan menampilkan data payment detail berdasarkan id yang direquest

6. 	Menguji API CreatePayment [POST]
	- Mengklik button try it out pada pilihan POST /api/PaymentDetail
	- Mengisi data payment detail yang mau diinput dan mengklik button execute
	- Swagger akan menampilkan data payment detail yang baru saja diinput

7. 	Menguji API UpdatePaymentById [PUT]
	- Mengklik button try it out pada pilihan PUT /api/PaymentDetail{id}
	- Mengisi data payment detail yang mau diubah dan mengklik button execute
	- Swagger akan menampilkan status dari eksekusi API

8. 	Menguji API DeletePaymentById [DELETE]
	- Mengklik button try it out pada pilihan PUT /api/PaymentDetail{id}
	- Mengisi id data payment detail yang mau dihapus dan mengklik button execute
	- Swagger akan menampilkan data payment detail yang baru saja dihapus



PANDUAN & LANGKAH TESTING CRUD OPERATION REST API MENGGUNAKAN POSTMAN

1.	Menguji API Register [POST]
	- Start koneksi MySQL melalui XAMPP dengan mengklik button start pada modul Apache dan MySQL
	- Membuka cmd atau windows powershell sesuai direktori project
	- Mengetik "dotnet run" pada cmd atau windows powershell
	- Membuka aplikasi Postman dan memilih method POST
	- Mengetik https://localhost:5001/api/authmanagement/register
	- Mengisi data register dan mengklik button send
	- Postman akan menampilkan status dan token

2. 	Menguji API Login [POST]
	- Membuat request baru dan memilih method POST
	- Mengetik https://localhost:5001/api/authmanagement/login
	- Mengisi data login dan mengklik button send
	- Postman akan menampilkan status dan token

3. 	Menguji API RefreshToken [POST]
	- Membuat request baru dan memilih method POST
	- Mengetik https://localhost:5001/api/authmanagement/refreshtoken
	- Mengisi token dan refresh token berdasarkan yang didapat dari proses login
	- Mengklik button send
	- Postman akan menampilkan status dan token

4. 	Menguji API GetPayments [GET]
	- Membuat request baru dan memilih method GET
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengetik https://localhost:5001/api/paymentdetail
	- Mengklik button send
	- Postman akan menampilkan semua data payment detail

5. 	Menguji API GetPaymentById [GET]
	- Membuat request baru dan memilih method GET
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengetik https://localhost:5001/api/paymentdetail/{id}
	- Mengklik button send
	- Postman akan menampilkan data payment detail berdasarkan id yang direquest

6. 	Menguji API CreatePayment [POST]
	- Membuat request baru dan memilih method POST
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengetik https://localhost:5001/api/paymentdetail
	- Mengisi data payment detail yang mau diinput dan mengklik button send
	- Postman akan menampilkan data payment yang baru saja diinput

7. 	Menguji API UpdatePaymentById [PUT]
	- Membuat request baru dan memilih method PUT
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengetik https://localhost:5001/api/paymentdetail/{id}
	- Mengisi data payment detail yang mau diubah dan mengklik button send
	- Postman akan menampilkan status dari eksekusi API

8. 	Menguji API DeletePaymentById [DELETE]
	- Membuat request baru dan memilih method DELETE
	- Melakukan authorization dengan memasukan token yand didapat dari proses login
	- Mengetik https://localhost:5001/api/paymentdetail/{id}
	- Mengklik button send
	- Postman akan menampilkan data payment detail yang baru saja dihapus